{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/app/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProjetoService {\n  http;\n  apiUrl = `${environment.apiUrl}${environment.urlCidades}`;\n  constructor(http) {\n    this.http = http;\n  }\n  //------------------------------------------------\n  /** Recupera a lista de cidades */\n  //------------------------------------------------\n  pesquisarCidades() {\n    return this.http.get(this.apiUrl);\n  }\n  //------------------------------------------------\n  /** Exclui a cidade informada */\n  //------------------------------------------------\n  excluir(cidade) {\n    return this.http.delete(`${this.apiUrl}/${cidade.id}`);\n  }\n  //------------------------------------------------\n  /** Salva a cidade informada */\n  //------------------------------------------------\n  salvar(cidade) {\n    if (cidade.id) {\n      return this.http.put(this.apiUrl, cidade); // Atualiza a cidade existente\n    }\n    return this.http.post(this.apiUrl, cidade); // Cria uma nova cidade\n  }\n  static ɵfac = function ProjetoService_Factory(t) {\n    return new (t || ProjetoService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProjetoService,\n    factory: ProjetoService.ɵfac\n  });\n}","map":{"version":3,"names":["HttpClient","environment","ProjetoService","http","apiUrl","urlCidades","constructor","pesquisarCidades","get","excluir","cidade","delete","id","salvar","put","post","i0","ɵɵinject","i1","factory","ɵfac"],"sources":["C:\\Users\\gusta\\Downloads\\desafio_estagiarios_1_2025\\desafio_estagiarios_1_2025\\desafio-técnico\\frontend-angular\\src\\service\\projeto-service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Cidade } from '@domain/cidade';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/app/environments/environment';\r\n\r\n@Injectable()\r\nexport class ProjetoService {\r\n  private apiUrl = `${environment.apiUrl}${environment.urlCidades}`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  //------------------------------------------------\r\n  /** Recupera a lista de cidades */\r\n  //------------------------------------------------\r\n  pesquisarCidades(): Observable<Cidade[]> {\r\n    return this.http.get<Cidade[]>(this.apiUrl);\r\n  }\r\n\r\n  //------------------------------------------------\r\n  /** Exclui a cidade informada */\r\n  //------------------------------------------------\r\n  excluir(cidade: Cidade): Observable<any> {\r\n    return this.http.delete(`${this.apiUrl}/${cidade.id}`);\r\n  }\r\n\r\n  //------------------------------------------------\r\n  /** Salva a cidade informada */\r\n  //------------------------------------------------\r\n  salvar(cidade: Cidade): Observable<any> {\r\n    if (cidade.id) {\r\n      return this.http.put(this.apiUrl, cidade); // Atualiza a cidade existente\r\n    }\r\n    return this.http.post(this.apiUrl, cidade); // Cria uma nova cidade\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,sBAAsB;AAIjD,SAASC,WAAW,QAAQ,kCAAkC;;;AAG9D,OAAM,MAAOC,cAAc;EAGLC,IAAA;EAFZC,MAAM,GAAG,GAAGH,WAAW,CAACG,MAAM,GAAGH,WAAW,CAACI,UAAU,EAAE;EAEjEC,YAAoBH,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvC;EACA;EACA;EACAI,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAW,IAAI,CAACJ,MAAM,CAAC;EAC7C;EAEA;EACA;EACA;EACAK,OAAOA,CAACC,MAAc;IACpB,OAAO,IAAI,CAACP,IAAI,CAACQ,MAAM,CAAC,GAAG,IAAI,CAACP,MAAM,IAAIM,MAAM,CAACE,EAAE,EAAE,CAAC;EACxD;EAEA;EACA;EACA;EACAC,MAAMA,CAACH,MAAc;IACnB,IAAIA,MAAM,CAACE,EAAE,EAAE;MACb,OAAO,IAAI,CAACT,IAAI,CAACW,GAAG,CAAC,IAAI,CAACV,MAAM,EAAEM,MAAM,CAAC,CAAC,CAAC;IAC7C;IACA,OAAO,IAAI,CAACP,IAAI,CAACY,IAAI,CAAC,IAAI,CAACX,MAAM,EAAEM,MAAM,CAAC,CAAC,CAAC;EAC9C;;qBA3BWR,cAAc,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAlB,UAAA;EAAA;;WAAdE,cAAc;IAAAiB,OAAA,EAAdjB,cAAc,CAAAkB;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}