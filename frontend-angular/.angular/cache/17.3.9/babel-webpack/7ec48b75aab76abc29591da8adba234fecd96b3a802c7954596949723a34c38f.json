{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProjetoService {\n  http;\n  constructor(http) {\n    this.http = http;\n  }\n  //------------------------------------------------\n  /** Recupera a lista de cidades */\n  //------------------------------------------------\n  pesquisarCidades() {}\n  //------------------------------------------------\n  /** Exclui a cidade informada */\n  //------------------------------------------------\n  excluir(cidade) {}\n  //------------------------------------------------\n  /** Salva a cidade informada */\n  //------------------------------------------------\n  salvar(cidade) {}\n  static ɵfac = function ProjetoService_Factory(t) {\n    return new (t || ProjetoService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProjetoService,\n    factory: ProjetoService.ɵfac\n  });\n}","map":{"version":3,"names":["HttpClient","Observable","ProjetoService","http","constructor","pesquisarCidades","excluir","cidade","salvar","i0","ɵɵinject","i1","factory","ɵfac"],"sources":["C:\\Users\\gusta\\Downloads\\desafio_estagiarios_1_2025\\desafio_estagiarios_1_2025\\desafio-técnico\\frontend-angular\\src\\service\\projeto-service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Cidade } from '@domain/cidade';\r\nimport { Observable, from } from 'rxjs';\r\nimport {environment} from \"../app/environments/environment\";\r\n\r\n@Injectable()\r\nexport class ProjetoService {\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n    //------------------------------------------------\r\n    /** Recupera a lista de cidades */\r\n    //------------------------------------------------\r\n    pesquisarCidades(): Observable<Cidade[]> {\r\n    }\r\n\r\n    //------------------------------------------------\r\n    /** Exclui a cidade informada */\r\n    //------------------------------------------------\r\n    excluir(cidade: Cidade): Observable<any> {\r\n    }\r\n\r\n    //------------------------------------------------\r\n    /** Salva a cidade informada */\r\n    //------------------------------------------------\r\n    salvar(cidade: Cidade): Observable<any> {\r\n    }\r\n\r\n}\r\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,sBAAsB;AAGjD,SAASC,UAAU,QAAc,MAAM;;;AAIvC,OAAM,MAAOC,cAAc;EAELC,IAAA;EAApBC,YAAoBD,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAErC;EACA;EACA;EACAE,gBAAgBA,CAAA,GAChB;EAEA;EACA;EACA;EACAC,OAAOA,CAACC,MAAc,GACtB;EAEA;EACA;EACA;EACAC,MAAMA,CAACD,MAAc,GACrB;;qBApBSL,cAAc,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAX,UAAA;EAAA;;WAAdE,cAAc;IAAAU,OAAA,EAAdV,cAAc,CAAAW;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}